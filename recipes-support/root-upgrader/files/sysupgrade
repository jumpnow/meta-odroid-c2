#!/bin/sh
#
# Install a new rootfs on the non-active root partition
#

root_dev=/dev/mmcblk1
rootfs_one_part=${root_dev}p1
rootfs_two_part=${root_dev}p2
flags_part=${root_dev}p3

mnt_root=/mnt
flags_mnt=${mnt_root}/bootflags
upgrade_mnt=${mnt_root}/upgrade

prompt_to_continue()
{
    partition=${1}
    answer_default="N"
    echo -n "Proceed with upgrade onto partition ${partition} (y/N): "
    read answer
    answer="${answer:-$answer_default}"

    case "${answer}" in
        [Yy]*)
            ;;
        *)
            echo "Aborting upgrade"
            exit 1
            ;;
    esac
}

echo -e -n "Finding the current root partition : "

cat /proc/cmdline | grep -q ${rootfs_one_part}

if [ $? -eq 0 ]; then
    current_root=${rootfs_one_part}
    upgrade_root=${rootfs_two_part}
else
    cat /proc/cmdline | grep -q ${rootfs_two_part}

    if [ $? -eq 0 ]; then
        current_root=${rootfs_two_part}
        upgrade_root=${rootfs_one_part}
    else
        echo "fail"
        echo "Current root device is not ${rootfs_one_part} or ${rootfs_two_part}"
        exit 1
    fi
fi

echo ""
echo "Current root: ${current_root}"
echo "Upgrade root: ${upgrade_root}"

# prompt_to_continue ${upgrade_root}

echo -e -n "Checking that ${mnt_root} is not in use : "

mount | grep -q ${mnt_root}

if [ $? -eq 0 ]; then
    echo "fail"
    echo "${mnt_root} is already in use"
    exit 1
fi

echo "ok"

echo -e -n "Checking for a ${flags_part} partition : "

fdisk -l ${root_dev} | grep -q ${flags_part}

if [ $? -eq 1 ]; then
    echo "fail"
    echo "There is no ${flags_part} partition"
    exit 1
fi

echo "ok"

echo -e -n "Checking that ${flags_part} is not in use : "

mount | grep -q ${flags_part}

if [ $? -eq 0 ]; then
    echo "fail"
    echo "${flags_part} is already mounted"
    exit 1
fi

echo "ok"

echo -e -n "Checking if ${flags_mnt} mount point exists : "

if [ ! -d ${flags_mnt} ]; then
    echo "no"

    echo -e -n "Attempting to create mount point ${flags_mnt} : "

    mkdir ${flags_mnt}

    if [ $? -eq 1 ]; then
        echo "fail"
        exit 1
    else
        echo "ok"
    fi
else
    echo "ok"
fi

echo -e -n "Checking if ${upgrade_mnt} mount point exists : "

if [ ! -d ${upgrade_mnt} ]; then
    echo "no"

    echo -e -n "Attempting to create mount point ${upgrade_mnt} : "

    mkdir ${upgrade_mnt}

    if [ $? -eq 1 ]; then
        echo "fail"
        exit 1
    else
        echo "ok"
    fi
else
    echo "ok"
fi

echo "Formatting partition ${upgrade_root} as ext4"

mkfs.ext4 -q -F ${upgrade_root}

if [ $? -ne 0 ]; then
    echo "fail"
    echo "Error formatting the new root partition ${upgrade_root}"
    exit 1
fi

echo -e -n "Mounting ${upgrade_root} on ${upgrade_mnt} : "

mount -t ext4 ${upgrade_root} ${upgrade_mnt}

if [ $? -ne 0 ]; then
    echo "fail"
    echo "Error mounting partition ${upgrade_root} on ${upgrade_mnt}"
    exit 1
else
    echo "ok"
fi

echo -e -n "Extracting ${1} to ${upgrade_mnt} : "

EXTRACT_UNSAFE_SYMLINKS=1 tar -C ${upgrade_mnt} -xJf ${1}

if [ $? -ne 0 ]; then
    echo "fail"
    echo "Error extracting the root filesystem"
    umount ${upgrade_root}
    exit 1
else
    echo "ok"
fi

if [ -x /usr/bin/syshook ]; then
    echo "Running /usr/bin/syshook"
    /usr/bin/syshook ${upgrade_mnt}

    if [ $? -ne 0 ]; then
        umount ${upgrade_root}
        exit 1
    fi
fi

echo -e -n "Unmounting new root ${upgrade_root} : "

umount ${upgrade_root}

if [ $? -ne 0 ]; then
    echo "fail"
    echo "Failed to umount new root"
    exit 1
else
    echo "ok"
fi

# now update the flag partition

echo -e -n "Mounting ${flags_part} read-write on ${flags_mnt} : "

mount -t vfat ${flags_part} ${flags_mnt}

if [ $? -ne 0 ]; then
    echo "fail"
    echo "Failed to mount ${flags_part} on ${flags_mnt} as type vfat"
    exit 1
fi

echo "ok"

echo -e -n "Updating flags partition : "

if [ "${upgrade_root}" = "${rootfs_one_part}" ]; then
    rm -rf ${flags_mnt}/one*
    touch ${flags_mnt}/one
    sync
    rm -rf ${flags_mnt}/two*
else
    rm -rf ${flags_mnt}/two*
    touch ${flags_mnt}/two
    sync
    rm -rf ${flags_mnt}/one*
fi

echo "ok"

echo -e -n "Unmounting ${flags_part} : "

umount ${flags_part}

if [ $? -ne 0 ]; then
    echo "fail"
    echo "Failed to unmount ${flags_part}"
    exit 1
fi

echo "ok"

echo "Reboot to use the new system"
